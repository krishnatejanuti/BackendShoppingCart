package com.ordermicroservice.entity;

import java.util.HashSet;
import java.util.Set;

import com.ordermicroservice.enums.OrderStatus;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Entity
@Table(name = "orders")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@ToString
public class Orders 
{

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long orderId;
    private Long userId; // ID of the user who placed the order
    private double totalAmount; // Total amount for the order

  
    @Enumerated(EnumType.STRING)
    private OrderStatus status ;// Status of the order (e.g., PENDING, PAID, SHIPPED)

    @OneToMany(mappedBy = "orders", cascade = CascadeType.ALL, orphanRemoval = true)
    private Set<OrderItem> items = new HashSet<>();

    // Utility methods
    public void addItem(OrderItem item) 
    {
        items.add(item);
        item.setOrders(this);
    }

    public void removeItem(OrderItem item) 
    {
        items.remove(item);
        item.setOrders(null);
    }

	public Orders(Long orderId, Long userId, double totalAmount, OrderStatus status) 
	{
		super();
		this.orderId = orderId;
		this.userId = userId;
		this.totalAmount = totalAmount;
		this.status = status;
	}

	
}
